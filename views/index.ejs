<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0">
	<title>When is Maxim returning from London</title>
	<meta property="og:title" content="<%= countdown %> | Countdown to the Return ðŸ‘‘">
	<meta property="og:description" content="<%= status %>">
	<meta property="og:image" content="<%= url %>/assets/maxim.jpg">
	<meta property="og:url" content="<%= url %>">
	<meta name="twitter:card" content="summary_large_image">
	<style>
		* {
			box-sizing: border-box;
		}
		html, body {
			height: 100%;
			color: black;
		}
		body {
			background: white;
			display: flex;
			justify-content: center;
			flex-direction: column;
			align-items: center;
			height: 100%;
			margin: 0;
			font-family: sans-serif;
		}
		#title {
			text-align: center;
			font-style: italic;
		}
		#timer {
			font-size: 5rem;
			font-weight: bold;
			text-align: center;
			color: black;
			margin: 0;
		}
		footer {
			position: absolute;
			bottom: 0px;
			font-size: 0.8rem;
			color: gray;
			display: flex;
			flex-direction: column;
			align-items: center;
			width: 100%;
			padding-bottom: 10px;
			user-select: none;
		}
		footer a {
			color: inherit;
    		text-decoration: inherit;
		    cursor: pointer;
		}
		#tagline {
			transition: .2s color;
			transition: .2s transform;
		}
		footer:hover > #tagline {
			color: rgba(0, 0, 0, 0.804);
			transform: scale(1.05);
		}
		#tooltip {
			opacity: 0;
			visibility: hidden;
			background-color: #333;
			color: #fff;
			text-align: center;
			border-radius: 5px;
			padding: 5px;
			position: absolute;
			z-index: 1;
			bottom: 125%;
			left: 50%;
			margin-left: -60px;
			width: 120px;
			display: flex;
			flex-direction: column;
			align-items: center;
			row-gap: 4px;
			cursor: pointer;
			transition: opacity 0.3s, visibility 0.3s;
		}
		p, em {
			margin: 0;;
		}
		#tooltip > img {
			width: 50px;
			height: 50px;
			border-radius: 50%;
		}
		#tagline:hover > #tooltip {
			opacity: 1;
			visibility: visible;
		}
	</style>
</head>
<body>
	<h1 id="title">Maxim is returning to Norwich in...</h1>
	<p id="timer">Loading...</p>
	<footer>
		<a href="https://floydverse.github.io/flappy-floyd" id="tagline">
			A floydverse site
			<div id="tooltip">
				<em>Like pointless wastes of global internet bandwidth?</em>
				<p>Check out FlappyFloyd on solana too!</p>
				<img src="https://floydverse.github.io/flappy-floyd/assets/flappyfloydlogo.png" alt="FlappyFloyd Logo">
			</div>
		</a>
		<small>Â© <a href="https://github.com/Zekiah-A/whenismaximreturningfromlondon">Zekiah-A</a>, <a href="https://getfullyear.com/">2025</a></small>
	</footer>
</body>
<script type="module">
	import { pluralSuffix, TARGET_DATE_STR } from "./shared.js";

	const timer = document.getElementById("timer");
	const date = new Date();
	const targetDate = new Date(TARGET_DATE_STR);

	function makeStatus(diff) {
		const days = Math.floor(diff / (1000 * 60 * 60 * 24));
		const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
		const minutes = Math.floor((diff / (1000 * 60)) % 60);
		const seconds = Math.floor((diff / 1000) % 60);

		let status = "";
		if (days > 0) {
			status += `${days} ${pluralSuffix("day", days)}, `;
		}
		if (hours > 0) {
			status += `${hours} ${pluralSuffix("hour", hours)}, `;
		}
		if (minutes > 0) {
			status += `${minutes} ${pluralSuffix("minute", minutes)}, and `;
		}
		if (seconds > 0) {
			status += `${seconds} ${pluralSuffix("second", seconds)}`;
		}
		return status;
	}

	function updateTimer() {
		const now = new Date();
		const diff = targetDate - now;

		if (diff <= 0) {
			timer.textContent = "He has returned ðŸŽ‰";
			title.textContent = "The wait is over...";
			return;
		}

		const status = makeStatus(diff);
		timer.textContent = status + "!";
	}

	setInterval(updateTimer, 1000);
	updateTimer();
</script>
</html>